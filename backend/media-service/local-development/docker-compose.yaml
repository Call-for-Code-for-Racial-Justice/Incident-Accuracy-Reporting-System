version: "3"

services:
  iars-zookeeper:
    container_name: iars-zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
      - "2000:2000"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  iars-broker:
    container_name: iars-broker
    image: confluentinc/cp-kafka:7.0.1
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - iars-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "iars-zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://iars-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  iars-kong:
    container_name: iars-kong
    image: kong/kong-gateway:2.8.1.2-alpine
    restart: always
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "8004:8004"
      - "8443:8443"
      - "8444:8444"
      - "8445:8445"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://0.0.0.0:8002
    volumes:
      - ./kong.yml:/kong/declarative/kong.yml

  iars-media-minio:
    container_name: iars-media-minio
    image: minio/minio:RELEASE.2022-09-17T00-09-45Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - iars_dev_media_database_volume:/data
    command: server --console-address ":9001" /data

  iars-media-mongodb:
    container_name: iars-media-mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017-27019:27017-27019"
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - iars_dev_media_object_storage_volume:/data/db

  # iars-media:
  #   container_name: iars-media
  #   build:
  #     dockerfile: Dockerfile
  #     context: ..
  #   ports:
  #     - "9080:9080"
  #   volumes:
  #     - ../src:/usr/src/app/src
  #     - iars_dev_media_service_target_volume:/usr/src/app/target
  #     - iars_dev_media_service_m2_volume:/root/.m2

  volumes:
    iars_dev_media_database_volume:
    iars_dev_media_object_storage_volume:
    iars_dev_media_service_target_volume:
    iars_dev_media_service_m2_volume:
