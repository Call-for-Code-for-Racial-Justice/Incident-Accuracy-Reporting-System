<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-9.1</feature>
        <feature>microProfile-5.0</feature>
        <feature>restfulWS-3.0</feature>
        <feature>jsonb-2.0</feature>
        <feature>jsonp-2.0</feature>
        <feature>cdi-3.0</feature>
        <feature>persistence-3.0</feature>
        <feature>jdbc-4.3</feature>
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!--
        <user name="yourUserName" password="" />
        -->
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  host="*"
                  httpPort="9080"
                  httpsPort="9443" />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="/incident-service" location="incident-service.war" />

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />

    <dataSource id="DefaultDataSource"
                jndiName="jdbc/postgres"
                jdbcDriverRef="postgresql-driver"
                type="javax.sql.ConnectionPoolDataSource"
                transactional="true">
        <properties serverName="localhost"
                             portNumber="15432"
                             databaseName="incidents"
                             user=""
                             password=""/>
    </dataSource>

    <dataSource id="DefaultDataSourceNonJta"
                jndiName="jdbc/postgresnonjta"
                jdbcDriverRef="postgresql-driver"
                type="javax.sql.ConnectionPoolDataSource"
                transactional="false">
        <properties serverName="localhost"
                             portNumber="15432"
                             databaseName="incidents"
                             user=""
                             password=""/>
    </dataSource>

    <jdbcDriver id="postgresql-driver"
        libraryRef="postgresqlLib"
        javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
        javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
        javax.sql.DataSource="org.postgresql.ds.PGPoolingDataSource"/>


    <library id="postgresqlLib">
        <fileset dir="${shared.resource.dir}" includes="p*.jar"/>
    </library>
</server>
